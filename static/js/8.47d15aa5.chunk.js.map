{"version":3,"sources":["components/contact/ContactDetails.jsx","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/send/send.js","components/reusable/FormInput.jsx","components/contact/ContactForm.jsx","pages/Contact.jsx"],"names":["contacts","id","name","icon","_jsx","FiMapPin","FiMail","FiPhone","ContactDetails","className","children","_jsxs","map","contact","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","FormInput","inputLabel","labelFor","inputType","inputId","inputName","placeholderText","ariaLabelName","htmlFor","type","placeholder","required","ContactForm","formData","setFormData","useState","email","subject","message","handleChange","e","value","onSubmit","preventDefault","emailjs","process","REACT_APP_EMAILJS_SERVICE_ID","REACT_APP_EMAILJS_TEMPLATE_ID","REACT_APP_EMAILJS_USER_ID","then","result","console","log","error","onChange","cols","rows","Button","title","Contact","motion","div","initial","opacity","animate","transition","ease","duration","delay"],"mappings":"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","file":"static/js/8.47d15aa5.chunk.js","sourcesContent":["import { FiPhone, FiMapPin, FiMail } from 'react-icons/fi';\n\nconst contacts = [\n\t{\n\t\tid: 1,\n\t\tname: 'Your Address, Your City, Your Country',\n\t\ticon: <FiMapPin />,\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'email@domain.com',\n\t\ticon: <FiMail />,\n\t},\n\t{\n\t\tid: 3,\n\t\tname: '555 8888 888',\n\t\ticon: <FiPhone />,\n\t},\n];\n\nconst ContactDetails = () => {\n\treturn (\n\t\t<div className=\"w-full lg:w-1/2\">\n\t\t\t<div className=\"text-left max-w-xl px-6\">\n\t\t\t\t<h2 className=\"font-general-medium text-2xl text-primary-dark dark:text-primary-light mt-12 mb-8\">\n\t\t\t\t\tContact details\n\t\t\t\t</h2>\n\t\t\t\t<ul className=\"font-general-regular\">\n\t\t\t\t\t{contacts.map((contact) => (\n\t\t\t\t\t\t<li className=\"flex \" key={contact.id}>\n\t\t\t\t\t\t\t<i className=\"text-2xl text-gray-500 dark:text-gray-400 mr-4\">\n\t\t\t\t\t\t\t\t{contact.icon}\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t<span className=\"text-lg mb-4 text-ternary-dark dark:text-ternary-light\">\n\t\t\t\t\t\t\t\t{contact.name}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ContactDetails;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import React from 'react';\n\nconst FormInput = ({\n\tinputLabel,\n\tlabelFor,\n\tinputType,\n\tinputId,\n\tinputName,\n\tplaceholderText,\n\tariaLabelName,\n}) => {\n\treturn (\n\t\t<div className=\"font-general-regular mb-4\">\n\t\t\t<label\n\t\t\t\tclassName=\"block text-lg text-primary-dark dark:text-primary-light mb-1\"\n\t\t\t\thtmlFor={labelFor}\n\t\t\t>\n\t\t\t\t{inputLabel}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\n\t\t\t\ttype={inputType}\n\t\t\t\tid={inputId}\n\t\t\t\tname={inputName}\n\t\t\t\tplaceholder={placeholderText}\n\t\t\t\taria-label={ariaLabelName}\n\t\t\t\trequired\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default FormInput;\n","import React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport Button from '../reusable/Button';\nimport FormInput from '../reusable/FormInput';\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n  });\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs.send(\n      process.env.REACT_APP_EMAILJS_SERVICE_ID,\n      process.env.REACT_APP_EMAILJS_TEMPLATE_ID,\n      formData,\n      process.env.REACT_APP_EMAILJS_USER_ID\n    ).then((result) => {\n        console.log(result.text);\n    }, (error) => {\n        console.log(error.text);\n    });\n\n    setFormData({\n      name: '',\n      email: '',\n      subject: '',\n      message: '',\n    });\n  };\n\n  return (\n    <div className=\"w-full lg:w-1/2\">\n      <div className=\"leading-loose\">\n        <form onSubmit={sendEmail} className=\"max-w-xl m-4 p-6 sm:p-10 bg-secondary-light dark:bg-secondary-dark rounded-xl shadow-xl text-left\">\n          <p className=\"font-general-medium text-primary-dark dark:text-primary-light text-2xl mb-8\">\n            Contact Form\n          </p>\n          <FormInput\n            inputLabel=\"Full Name\"\n            labelFor=\"name\"\n            inputType=\"text\"\n            inputId=\"name\"\n            inputName=\"name\"\n            placeholderText=\"Your Name\"\n            ariaLabelName=\"Name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n          <FormInput\n            inputLabel=\"Email\"\n            labelFor=\"email\"\n            inputType=\"email\"\n            inputId=\"email\"\n            inputName=\"email\"\n            placeholderText=\"Your email\"\n            ariaLabelName=\"Email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n          <FormInput\n            inputLabel=\"Subject\"\n            labelFor=\"subject\"\n            inputType=\"text\"\n            inputId=\"subject\"\n            inputName=\"subject\"\n            placeholderText=\"Subject\"\n            ariaLabelName=\"Subject\"\n            value={formData.subject}\n            onChange={handleChange}\n          />\n\n          <div className=\"mt-6\">\n            <label className=\"block text-lg text-primary-dark dark:text-primary-light mb-2\" htmlFor=\"message\">\n              Message\n            </label>\n            <textarea\n              className=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\n              id=\"message\"\n              name=\"message\"\n              cols=\"14\"\n              rows=\"6\"\n              aria-label=\"Message\"\n              value={formData.message}\n              onChange={handleChange}\n            ></textarea>\n          </div>\n\n          <div className=\"font-general-medium w-40 px-4 py-2.5 text-white text-center font-medium tracking-wider bg-rosa-500 hover:bg-indigo-600 focus:ring-1 focus:ring-indigo-900 rounded-lg mt-6 duration-500\">\n            <Button title=\"Send Message\" type=\"submit\" aria-label=\"Send Message\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import { motion } from 'framer-motion';\nimport ContactDetails from '../components/contact/ContactDetails';\nimport ContactForm from '../components/contact/ContactForm';\n\nconst Contact = () => {\n\treturn (\n\t\t<motion.div\n\t\t\tinitial={{ opacity: 0 }}\n\t\t\tanimate={{ opacity: 1 }}\n\t\t\ttransition={{\n\t\t\t\tease: 'easeInOut',\n\t\t\t\tduration: 0.5,\n\t\t\t\tdelay: 0.1,\n\t\t\t}}\n\t\t\tclassName=\"container mx-auto flex flex-col-reverse lg:flex-row py-5 lg:py-10 lg:mt-10\"\n\t\t>\n\t\t\t<ContactForm />\n\t\t\t<ContactDetails />\n\t\t</motion.div>\n\t);\n};\n\nexport default Contact;\n"],"sourceRoot":""}